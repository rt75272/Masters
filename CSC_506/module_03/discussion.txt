How does the choice of sorting algorithm depend on the characteristics of the input data?

One thing to consider when selecting an optimal sorting algorithm is the size of the input dataset. With a smaller given dataset an algorithm such as bubble sort or insertion sort could be the best option. However, given a larger dataset, an algorithm such as mergesort may provide better results. Bubble sort and insertion sort may perform better with smaller dataset because their best time complexity is Ω(n), whereas, mergsort’s best time complexity is Ω(n log(n)). Once the dataset is larger bubble sort and insertion sort are more likely to perform with their average or worst time complexities, which is O(n^2). At which point, mergesort could be a better option due to its average and worst time complexity being O(n log(n)). Therefore, selecting the optimal sorting algorithm can greatly depend on something as simple as the size of the input dataset. 
